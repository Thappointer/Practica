else cout << "error: no existe la ciudad" << endl;
tar -cvf practica.tar riu.hh riu.cc ciutat.hh ciutat.cc inventari.hh inventari.cc vaixell.hh vaixell.cc producte.hh producte.cc program.cc Makefile
diff -y out.txt sample/sample.cor
diff out.txt sample/sample.cor
./program.exe < sample/sample.inp > out.txt
p2++ -o output.exe program.cc riu.cc ciutat.cc producte.cc vaixell.cc inventari.cc && ./output.exe
FLAGS = -D_JUDGE_ -D_GLIBCXX_DEBUG -O2 -Wall -Wextra -Werror -Wno-sign-compare -std=c++11 -fno-extended-identifiers

sample: fin! :)
7
12 5
6 13
4 1
43 14
21 3
17 2
8 25
barna
berna
birna
#
#
borna
#
#
burna
#
#
2 50
7 23
// bucle
escribir_barco
ls
burna
3
6 3 7
4 7 3
5 1 1
barna
2
1 3 5
3 3 2
#
leer_inventarios
berna
0
birna
1
7 1 1
#
li bruna
0
leer_inventario borna
2
2 4 5
4 2 2
eb
modificar_barco
20 10
3 5
modificar_barco
3 5
12 3
modificar_barco 
15 10
20 5
modificar_barco
3 10
3 4
eb
mb
6 10
2 12
eb
consultar_num
agregar_productos
2
1 2
3 4
ap
1
5 6
cn
escribir_producto 11
ep 10
escribir_ciudad bruna
escribir_ciudad barna
escribir_ciudad burna
ec borna
poner_prod bruna 11 3 3
poner_prod borna 11 3 3
poner_prod bruna 10 3 3
poner_prod borna 2 10 10
pp borna 7 200 200
ec borna
modificar_prod bruna 11 3 3
modificar_prod borna 11 3 3
modificar_prod borna 3 4 5
mp borna 4 1 9
ec borna
quitar_prod bruna 11
quitar_prod borna 11
quitar_prod bruna 3
quitar_prod borna 6
qp borna 7
ec borna
consultar_prod bruna 11
consultar_prod borna 11
consultar_prod bruna 3
consultar_prod borna 6
cp borna 2
ec borna
comerciar z1 z2
comerciar barna z1
co z1 barna
escribir_ciudad barna
escribir_ciudad borna
co barna borna
escribir_ciudad barna
escribir_ciudad borna
escribir_ciudad burna
comerciar burna borna
escribir_ciudad borna
escribir_ciudad burna
escribir_ciudad barna
escribir_ciudad berna
escribir_ciudad birna
redistribuir
escribir_ciudad borna
escribir_ciudad burna
escribir_ciudad barna
escribir_ciudad berna
escribir_ciudad birna
hv
eb
leer_rio
barna
birna
#
#
cerna
#
#
escribir_ciudad barna
escribir_ciudad cerna
escribir_ciudad birna
escribir_barco
lr
darna
derna
dirna
#
#
dorna
#
#
durna
#
#
ec darna
ls
darna
2
1 15 8
2 3 10
derna
2
2 20 3
3 4 20
dirna
2 
3 14 5
4 2 10
dorna
2
4 10 10
5 20 20
durna
2
6 8 9
7 19 3
#
re
escribir_ciudad darna
escribir_ciudad derna
escribir_ciudad dirna
escribir_ciudad dorna
escribir_ciudad durna
mb 3 10 4 10
// primer viaje
hacer_viaje
eb
escribir_ciudad darna
escribir_ciudad derna
escribir_ciudad dirna
escribir_ciudad dorna
escribir_ciudad durna
escribir_barco
mb 8 10 9 10
eb
// segundo viaje
hv
eb
escribir_ciudad darna
escribir_ciudad derna
escribir_ciudad dirna
escribir_ciudad dorna
escribir_ciudad durna
// tercer viaje
mb 2 10 6 10
hacer_viaje
escribir_barco
escribir_ciudad darna
escribir_ciudad derna
escribir_ciudad dirna
escribir_ciudad dorna
escribir_ciudad durna
fin


Privat 1: fer_viatge

Privat 2: comerciar i redistribuir

Privat 3: eficiència

1. leer_rio o lr. //CHECKED 

2. leer_inventario o li. 

3. leer_inventarios o ls. 

4. modificar_barco o mb. 

5. escribir_barco o eb. 

6. consultar_num o cn.

7. agregar_productos o ap. 

8. escribir_producto o ep. 

9. escribir_ciudad o ec. 

10. poner_prod o pp. 

11. modificar_prod o mp. 

12. quitar_prod o qp. 

13. consultar_prod o cp. 

14. comerciar o co. 

15. redistribuir o re. 

16. hacer_viaje o hv. 

17. fin. Acaba la ejecución